---
import type { CollectionDocument, CollectionDocumentType, Language, StaticDocument, StaticDocumentType } from '@root/sanity/sanity.types';
import { generateRoute } from '@lib/routingUtils';
import { getSlug, getTitle } from '@lib/contentUtils';

type Props = {
    items: (CollectionDocument | StaticDocument)[];
    lang: Language;
    title: string;
    type: CollectionDocumentType | StaticDocumentType;
    min: number;
};

const {
    items,
    lang,
    title,
    type,
    min,
} = Astro.props;

const delta = min - items.length;
---

{items.length > 0 ? (
    <li class='navigation-menu-item collection-navigation-item'>
        <button type='button' data-nav-expand aria-expanded='false' aria-controls={`${type}-submenu-${lang}`}>
            {title}
        </button>
        <ul id={`${type}-submenu-${lang}`} class='navigation-submenu' aria-hidden='true' hidden>
            {items.map((item) => {
                const slug = getSlug(item, lang);
                const itemTitle = getTitle(item, lang);
                const routeToItem = slug && generateRoute(item, lang);
                return routeToItem && (<>
                    <li class='navigation-submenu-item static-navigation-item'>
                        <a href={routeToItem} aria-current={routeToItem === Astro.url.pathname ? 'page' : undefined}>
                            {itemTitle}
                        </a>
                    </li>
                    {delta > 0 && [...Array(delta)].map(() => (
                        <li class='navigation-submenu-item' aria-hidden='true' role='presentation'></li>
                    ))}
                </>);
            })}
        </ul>
    </li>
) : (
    <li class='navigation-menu-item'></li>
)}